Parameters:
  InstanceType:
    Description: WebServer EC2 instance type (has default, AllowedValues)
    Type: String
    Default: t2.micro
    AllowedValues: #possible values
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
    ConstraintDescription: must be a valid EC2 instance type.
  DBPwd:
    NoEcho: true
    Description: The database admin account password (won't be echoed)
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances. Linked to AWS Parameter
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
Mappings: 
  RegionMap: 
    us-east-1: 
      "HVM64": "ami-04d29b6f966df1537"
    us-west-1: 
      "HVM64": "ami-08d9a394ac1c2994c"
    us-west-2: 
      "HVM64": "ami-0e472933a1395e172"
    us-east-2: 
      "HVM64": "ami-09558250a3419e7d0"
    ap-northeast-1: 
      "HVM64": "ami-0d728fd4e52be968f"
  
Resources:
  MyEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: !Ref InstanceType 
      KeyName: !Ref KeyName
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', HVM64]
      SubnetId: 
        Fn::ImportValue: SampleNetworkCrossTag-SubnetID
      SecurityGroupIds:
        - Fn::ImportValue: SampleNetworkCrossTag-SecurityGroupID
      Tags:
        - Key: Name
          Value: myInstance
    
  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref MyEC2Instance
Outputs:
  IPV4Adress: 
    Description: Private IP du serveur
    Value: !GetAtt  MyEC2Instance.PrivateIp
  DNSNAME:
    Description: DNS Name
    Value: !GetAtt  MyEC2Instance.PublicDnsName
     
  


